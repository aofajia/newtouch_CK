<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoyi.system.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.system.domain.Employee">
        <result column="employeeNo" property="employeeno" jdbcType="VARCHAR"/>
        <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="supplier" property="supplier" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="company_id" property="companyId" jdbcType="VARCHAR"/>
        <result column="deptID" property="deptid" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert" parameterType="com.ruoyi.system.domain.Employee">
    insert into hrfi_opencard (employeeNo, phoneNumber, name,
    status, supplier, gender,
    email, company_id, deptID
    )
    values (#{employeeno,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{status,jdbcType=INTEGER}, #{supplier,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{deptid,jdbcType=VARCHAR}
    )
  </insert>
    <insert id="insertSelective" parameterType="com.ruoyi.system.domain.Employee">
        insert into hrfi_opencard
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeno != null">
                employeeNo,
            </if>
            <if test="phonenumber != null">
                phoneNumber,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="supplier != null">
                supplier,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="deptid != null">
                deptID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeno != null">
                #{employeeno,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                #{phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="supplier != null">
                #{supplier,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="deptid != null">
                #{deptid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 供应商开卡分页信息显示 -->
    <select id="openCardDataList" resultType="com.ruoyi.system.domain.EmployeeExample">
        SELECT
        employeeNo AS employeeno,
        phoneNumber AS phonenumber,
        s.`name` AS NAME,
        s.`status` AS `status`,
        gender AS gender,
        email AS email,
        s.company_id AS companyId,
        deptID AS deptid,
        c.`name` AS companyName,
        o.mean AS statusName,
      d.`name` AS deptName
    FROM
        hrfi_opencard s
    LEFT JOIN hrfi_company c ON s.company_id = c.id
    LEFT JOIN hrfi_opencard_status o ON s.`status` = o.`status`
    LEFT JOIN hrfi_department d on s.company_id = d.company_id and s.deptID = d.id
    </select>

    <!-- 供应商开卡分页信息显示根据员工id查询-->
    <select id="openCardDataListById" resultType="com.ruoyi.system.domain.EmployeeExample">
    SELECT
    employeeNo AS employeeno,
    phoneNumber AS phonenumber,
    s.`name` AS NAME,
    s.`status` AS `status`,
    gender AS gender,
    email AS email,
    s.company_id AS companyId,
    deptID AS deptid,
    c.`name` AS companyName,
    o.mean AS statusName,
    d.`name` AS deptName
    FROM
    hrfi_opencard s
    LEFT JOIN hrfi_company c ON s.company_id = c.id
    LEFT JOIN hrfi_opencard_status o ON s.`status` = o.`status`
    LEFT JOIN hrfi_department d on s.company_id = d.company_id and s.deptID = d.id
    where s.employeeNo = #{id}
    </select>


        <!-- 饿了么开卡数据 -->
    <select id="openCardData" resultType="com.ruoyi.system.domain.EmployeeExample">
        SELECT
        employeeNo AS employeeno,
        phoneNumber AS phonenumber,
        s.`name` AS NAME,
        d.`name` AS deptName,
        s.gender AS gender,
        s.email AS email
    FROM
        hrfi_opencard s
    LEFT JOIN hrfi_company c ON s.company_id = c.id
    LEFT JOIN hrfi_opencard_status o ON s.`status` = o.`status`
    LEFT JOIN hrfi_department d ON s.company_id = d.company_id
    AND s.deptID = d.id
    LIMIT 2000,4000
    </select>

    <update id="updateByEmpoloyeeId">
      update hrfi_opencard
      set `status` =  #{status}
      where employeeNo = #{id}
    </update>

</mapper>